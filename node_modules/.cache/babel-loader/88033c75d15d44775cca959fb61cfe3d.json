{"ast":null,"code":"import _classCallCheck from \"/Users/kjordan/Desktop/Clicky4/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kjordan/Desktop/Clicky4/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kjordan/Desktop/Clicky4/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kjordan/Desktop/Clicky4/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kjordan/Desktop/Clicky4/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kjordan/Desktop/Clicky4/src/components/Game/Game.js\";\nimport React, { Component } from \"react\";\nimport Container from \"../Container\";\nimport GameCard from \"../GameCard\";\nimport Instructions from \"../Instructions\";\nimport Header from \"../Header\";\nimport data from \"../../data\";\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Game)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      card: card,\n      score: 0,\n      topScore: 0,\n      message: \"Click as many images as you can without repeating\"\n    };\n\n    _this.handleClick = function (data) {};\n\n    _this.gameOver = function () {\n      if (_this.state.score > _this.state.topScore) {\n        _this.setState({\n          topScore: _this.state.score\n        }, function () {\n          console.log(this.state.topScore);\n        });\n      }\n\n      _this.state.card.forEach(function (card) {\n        card.count = 0;\n      });\n\n      alert(\"Game Over!\");\n\n      _this.setState({\n        score: 0\n      });\n\n      return true;\n    };\n\n    _this.clickCount = function (id) {\n      _this.state.card.find(function (o, i) {\n        if (o.id === id) {\n          if (card[i].count === 0) {\n            card[i].count = card[i].count + 1;\n\n            _this.setState({\n              score: _this.state.score + 1\n            }, function () {\n              console.log(this.state.score);\n            });\n\n            _this.state.card.sort(function () {\n              return Math.random() - 0.5;\n            });\n\n            return true;\n          } else {\n            _this.gameOver();\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Header, {\n        score: this.state.score,\n        topScore: this.state.topScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(GameCard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/kjordan/Desktop/Clicky4/src/components/Game/Game.js"],"names":["React","Component","Container","GameCard","Instructions","Header","data","Game","state","card","score","topScore","message","handleClick","gameOver","setState","console","log","forEach","count","alert","clickCount","id","find","o","i","sort","Math","random"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,IAAP,MAAiB,YAAjB;;IAGMC,I;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,IAAI,EAAJA,IADI;AAEJC,MAAAA,KAAK,EAAE,CAFH;AAGJC,MAAAA,QAAQ,EAAE,CAHN;AAIJC,MAAAA,OAAO,EAAE;AAJL,K;;UAWRC,W,GAAc,UAACP,IAAD,EAAU,CAGvB,C;;UAGDQ,Q,GAAW,YAAM;AAEb,UAAI,MAAKN,KAAL,CAAWE,KAAX,GAAmB,MAAKF,KAAL,CAAWG,QAAlC,EAA4C;AACxC,cAAKI,QAAL,CAAc;AAACJ,UAAAA,QAAQ,EAAE,MAAKH,KAAL,CAAWE;AAAtB,SAAd,EAA4C,YAAW;AACnDM,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWG,QAAvB;AACH,SAFD;AAGH;;AACD,YAAKH,KAAL,CAAWC,IAAX,CAAgBS,OAAhB,CAAwB,UAAAT,IAAI,EAAI;AAC5BA,QAAAA,IAAI,CAACU,KAAL,GAAa,CAAb;AACH,OAFD;;AAGAC,MAAAA,KAAK,CAAC,YAAD,CAAL;;AACA,YAAKL,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAE;AAAR,OAAd;;AACA,aAAO,IAAP;AACH,K;;UAEDW,U,GAAa,UAAAC,EAAE,EAAI;AACf,YAAKd,KAAL,CAAWC,IAAX,CAAgBc,IAAhB,CAAqB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC7B,YAAID,CAAC,CAACF,EAAF,KAASA,EAAb,EAAiB;AACf,cAAGb,IAAI,CAACgB,CAAD,CAAJ,CAAQN,KAAR,KAAkB,CAArB,EAAuB;AACrBV,YAAAA,IAAI,CAACgB,CAAD,CAAJ,CAAQN,KAAR,GAAgBV,IAAI,CAACgB,CAAD,CAAJ,CAAQN,KAAR,GAAgB,CAAhC;;AACA,kBAAKJ,QAAL,CAAc;AAACL,cAAAA,KAAK,EAAG,MAAKF,KAAL,CAAWE,KAAX,GAAmB;AAA5B,aAAd,EAA8C,YAAU;AACtDM,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWE,KAAvB;AACD,aAFD;;AAGA,kBAAKF,KAAL,CAAWC,IAAX,CAAgBiB,IAAhB,CAAqB;AAAA,qBAAMC,IAAI,CAACC,MAAL,KAAgB,GAAtB;AAAA,aAArB;;AACA,mBAAO,IAAP;AACD,WAPD,MAOO;AACL,kBAAKd,QAAL;AACD;AACF;AACF,OAbD;AAcD,K;;;;;;;6BAKM;AACL,aACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,KAA1B;AAAiC,QAAA,QAAQ,EAAI,KAAKF,KAAL,CAAWG,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAGgB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAHhB,CAHJ,CADJ;AAiBH;;;;EAxEcV,S;;AA2EnB,eAAeM,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Container from \"../Container\";\nimport GameCard from \"../GameCard\";\nimport Instructions from \"../Instructions\";\nimport Header from \"../Header\";\n\nimport data from \"../../data\";\n\n\nclass Game extends Component {\n\n    state = {\n        card,\n        score: 0,\n        topScore: 0,\n        message: \"Click as many images as you can without repeating\"\n    };\n\n    // you need to tell which card is clicked on and add that card to an array of clicked on cards\n    // if user selects a card that is pushed to that array then the game will be over\n    // gameover will return that the game is over\n    \n    handleClick = (data) => { \n        \n\n    }\n\n\n    gameOver = () => { \n\n        if (this.state.score > this.state.topScore) { \n            this.setState({topScore: this.state.score}, function() { \n                console.log(this.state.topScore);\n            });\n        }\n        this.state.card.forEach(card => { \n            card.count = 0; \n        }); \n        alert(\"Game Over!\"); \n        this.setState({score: 0}); \n        return true;\n    }\n\n    clickCount = id => {\n        this.state.card.find((o, i) => {\n          if (o.id === id) {\n            if(card[i].count === 0){\n              card[i].count = card[i].count + 1;\n              this.setState({score : this.state.score + 1}, function(){\n                console.log(this.state.score);\n              });\n              this.state.card.sort(() => Math.random() - 0.5)\n              return true; \n            } else {\n              this.gameOver();\n            }\n          }\n        });\n      }\n \n    \n\n\n    render() {\n        return (\n            <div className=\"animated fadeIn\">\n              \n              \n                <Container>\n                <Header score={this.state.score} topScore = {this.state.topScore} />\n  \n                                <GameCard>\n                                <div>\n                                   \n                                </div>    \n                                    </GameCard>   \n                        \n                </Container>\n\n            </div>\n        );\n    }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}