{"ast":null,"code":"import _classCallCheck from \"/Users/kjordan/Desktop/Clicky4/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kjordan/Desktop/Clicky4/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kjordan/Desktop/Clicky4/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kjordan/Desktop/Clicky4/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kjordan/Desktop/Clicky4/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kjordan/Desktop/Clicky4/src/components/Game/Game.js\";\nimport React, { Component } from \"react\";\nimport Container from \"../Container\";\nimport GameCard from \"../GameCard\";\nimport Header from \"../Header\";\nimport data from \"../../data\";\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Game)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: data,\n      score: 0,\n      topScore: 0,\n      message: \"Click as many images as you can without repeating\"\n    };\n\n    _this.cardClicked = function (id) {\n      var guessedCorrectly = false;\n\n      var cardArray2 = _this.state.data.map(function (image) {\n        if (image.id === id) {\n          if (!image.clicked) {\n            image.clicked = true;\n            guessedCorrectly = true;\n          }\n        }\n\n        return image;\n      });\n\n      guessedCorrectly ? _this.correctGuess(cardArray2) : _this.wrongGuess(cardArray2);\n    };\n\n    _this.shuffleDeck = function (data) {\n      var cardArray2 = data.sort(function (a, b) {\n        return 0.5 - Math.random();\n      });\n      return cardArray2;\n    };\n\n    _this.resetDeck = function (data) {\n      var resetData = data.map(function (image) {\n        return {\n          image: image,\n          clicked: false\n        };\n      });\n      return _this.shuffleDeck(resetData);\n    };\n\n    _this.correctGuess = function (cardArray2) {\n      var newScore = _this.state.score;\n      newScore++;\n      var newTopScore = Math.max(newScore, _this.state.topScore);\n\n      _this.setState({\n        data: _this.shuffleDeck(cardArray2),\n        score: newScore,\n        topScore: newTopScore\n      });\n    };\n\n    _this.wrongGuess = function (cardArray2) {\n      _this.setState({\n        data: _this.resetDeck(cardArray2),\n        score: 0\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Header, {\n        score: this.state.score,\n        topScore: this.state.topScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.data.map(function (image) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(GameCard, {\n          key: image.id,\n          id: image.id,\n          image: image.image,\n          clicked: image.clicked,\n          handleClick: _this2.cardClicked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/kjordan/Desktop/Clicky4/src/components/Game/Game.js"],"names":["React","Component","Container","GameCard","Header","data","Game","state","score","topScore","message","cardClicked","id","guessedCorrectly","cardArray2","map","image","clicked","correctGuess","wrongGuess","shuffleDeck","sort","a","b","Math","random","resetDeck","resetData","newScore","newTopScore","max","setState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Container from \"../Container\";\nimport GameCard from \"../GameCard\";\nimport Header from \"../Header\";\nimport data from \"../../data\";\n\n\nclass Game extends Component {\n\n   state = {\n       data,\n       score: 0,\n       topScore: 0,\n       message: \"Click as many images as you can without repeating\"\n   };\n\n\n\n\n  cardClicked = id => { \n   let guessedCorrectly = false;\n      const cardArray2 = this.state.data.map(image => { \n         if (image.id === id) { \n            if(!image.clicked) {\n            image.clicked = true; \n            guessedCorrectly = true;\n            }\n         }\n         return image;\n      }); \n      guessedCorrectly ? this.correctGuess(cardArray2) : this.wrongGuess(cardArray2); \n\n  };\n\n \n\n  shuffleDeck = data => { \n   let cardArray2 = data.sort(function(a,b){ \n      return 0.5 - Math.random()\n   });\n   return cardArray2; \n}\n\nresetDeck = data => { \n   const resetData = data.map(image => ({ image, clicked: false})); \n   return this.shuffleDeck(resetData); \n}\n\n\ncorrectGuess = cardArray2 => { \n   let newScore = this.state.score;\n    newScore++\n    let newTopScore = Math.max(newScore, this.state.topScore);\n\n    this.setState({ \n       data: this.shuffleDeck(cardArray2), \n       score: newScore, \n       topScore: newTopScore\n    })\n}\n\n\nwrongGuess = cardArray2 => {\n   this.setState({\n       data: this.resetDeck(cardArray2),\n       score: 0\n   })\n       \n\n}\n\n\n\n\n\n\n\n  \n\n\n\n\n   render() {\n       return (\n           <div className=\"animated fadeIn\">\n               <Header score={this.state.score} topScore = {this.state.topScore} />\n         \n               <Container>\n                   {\n                       this.state.data.map(image => (\n                           <div >\n                               <GameCard\n                                   key={image.id}\n                                   id={image.id} \n                                   image={image.image}\n                                   clicked={image.clicked}\n                                   handleClick={this.cardClicked}\n                               />      \n                           </div>  \n                       ))\n                   }\n               </Container>\n    \n           </div>\n       );\n   }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}